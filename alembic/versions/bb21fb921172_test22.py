"""test22

Revision ID: bb21fb921172
Revises: 
Create Date: 2025-01-12 15:24:56.602511

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision: str = 'bb21fb921172'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('inspections', 'inspection_date1',
               existing_type=mysql.DATETIME(),
               type_=sa.Date(),
               existing_nullable=True)
    op.alter_column('inspections', 'inspection_date2',
               existing_type=mysql.DATETIME(),
               type_=sa.Date(),
               existing_nullable=True)
    op.alter_column('inspections', 'inspection_date3',
               existing_type=mysql.DATETIME(),
               type_=sa.Date(),
               existing_nullable=True)
    op.alter_column('projects', 'start_date',
               existing_type=mysql.DATETIME(),
               type_=sa.Date(),
               nullable=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('projects', 'start_date',
               existing_type=sa.Date(),
               type_=mysql.DATETIME(),
               nullable=False)
    op.alter_column('inspections', 'inspection_date3',
               existing_type=sa.Date(),
               type_=mysql.DATETIME(),
               existing_nullable=True)
    op.alter_column('inspections', 'inspection_date2',
               existing_type=sa.Date(),
               type_=mysql.DATETIME(),
               existing_nullable=True)
    op.alter_column('inspections', 'inspection_date1',
               existing_type=sa.Date(),
               type_=mysql.DATETIME(),
               existing_nullable=True)
    # ### end Alembic commands ###
